{"version":3,"sources":["./src/app/register/register.host.component.ts","./src/app/register/register.module.ts","./src/app/register/register.routes.ts","./src/app/register/register/register.component.ts","./src/app/register/register/register.component.html"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'register-host',\n  template: '<div class=\"d-flex justify-content-center\"><router-outlet></router-outlet></div>'\n})\nexport class RegisterHostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { RegisterHostComponent } from './register.host.component';\nimport { RegisterRoutes } from './register.routes';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [RegisterComponent, RegisterHostComponent],\n  imports: [\n    RouterModule.forChild(RegisterRoutes),\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class RegisterModule { }\n","import { Route } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { RegisterHostComponent } from './register.host.component';\n\nexport const RegisterRoutes: Route[] = [\n    {\n        path: '',\n        component: RegisterHostComponent,\n        children: [\n            {\n                path: '',\n                component: RegisterComponent\n            }\n        ]\n    }\n];","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.sass']\n})\nexport class RegisterComponent implements OnInit {\n  email = '';\n  firstName = '';\n  lastName = '';\n  phoneNumber = '';\n  address = '';\n  ssn = '';\n  password = ''\n  errors = {\n    \"user.email\": [],\n    \"user.firstName\": [],\n    \"user.lastName\": [],\n    \"user.phoneNumber\": [],\n    \"user.address\": [],\n    \"user.ssn\": [],\n    \"password\": []\n  };\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    const data = {\n      user: {\n        email: this.email,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        address: this.address,\n        phoneNumber: this.phoneNumber,\n        ssn: this.ssn\n      },\n      password: this.password\n    };\n    this.http.post('/register', data).subscribe(value => {\n\n    }, errorResponse => {\n      if (errorResponse.status === 400) {\n        this.genrateValidationErros(errorResponse.error.errors);\n      }\n    });\n  }\n\n  genrateValidationErros(errors) {\n    errors.forEach(element => {\n      this.errors[element.fieldName].push(element.message);\n    });\n  }\n}\n","<h1>Register</h1>\n<form>\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"email\"\n                placeholder=\"Enter email\" [class.is-invalid]=\"errors['user.email'].length\" />\n            <div class=\"invalid-feedback\" *ngFor=\"let em of errors['user.email']\">\n                {{em}}\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"email\">First Name</label>\n            <input type=\"email\" [(ngModel)]=\"firstName\" name=\"firstName\" class=\"form-control\" id=\"firstName\"\n                aria-describedby=\"firstName\" placeholder=\"Enter first name\"\n                [class.is-invalid]=\"errors['user.firstName'].length\" />\n            <div class=\"invalid-feedback\" *ngFor=\"let em of errors['user.firstName']\">\n                {{em}}\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"email\">Last Name</label>\n            <input type=\"email\" [(ngModel)]=\"lastName\" name=\"lastName\" class=\"form-control\" id=\"lastName\"\n                aria-describedby=\"lastName\" placeholder=\"Enter last name\"\n                [class.is-invalid]=\"errors['user.lastName'].length\" />\n            <div class=\"invalid-feedback\" *ngFor=\"let em of errors['user.lastName']\">\n                {{em}}\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Address</label>\n        <input type=\"email\" [(ngModel)]=\"address\" name=\"address\" class=\"form-control\" id=\"address\"\n            aria-describedby=\"address\" placeholder=\"Enter address\" [class.is-invalid]=\"errors['user.address'].length\" />\n        <div class=\"invalid-feedback\" *ngFor=\"let em of errors['user.address']\">\n            {{em}}\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Phone number</label>\n        <input type=\"email\" [(ngModel)]=\"phoneNumber\" name=\"phoneNumber\" class=\"form-control\" id=\"phoneNumber\"\n            aria-describedby=\"phoneNumber\" placeholder=\"Enter phone number xxx-xxx-xxxx\"\n            [class.is-invalid]=\"errors['user.phoneNumber'].length\" />\n        <div class=\"invalid-feedback\" *ngFor=\"let em of errors['user.phoneNumber']\">\n            {{em}}\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">SSN</label>\n        <input type=\"email\" [(ngModel)]=\"ssn\" name=\"ssn\" class=\"form-control\" id=\"ssn\" aria-describedby=\"ssn\"\n            placeholder=\"Enter SSN xxx-xx-xxxx\" [class.is-invalid]=\"errors['user.ssn'].length\" />\n        <div class=\"invalid-feedback\" *ngFor=\"let em of errors['user.ssn']\">\n            {{em}}\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\"\n            placeholder=\"Password\" [class.is-invalid]=\"errors['password'].length\" />\n        <div class=\"invalid-feedback\" *ngFor=\"let em of errors['password']\">\n            {{em}}\n        </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"register()\">Submit</button>\n    <br>\n    <a href='#/login'>Click here to Login.</a>\n</form>"],"sourceRoot":"webpack:///"}