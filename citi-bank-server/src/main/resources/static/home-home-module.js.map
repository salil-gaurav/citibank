{"version":3,"sources":["./src/app/home/account/account.component.ts","./src/app/home/account/account.component.html","./src/app/home/account/add-account/add-account.component.ts","./src/app/home/account/add-account/add-account.component.html","./src/app/home/account/list-account/list-account.component.ts","./src/app/home/account/list-account/list-account.component.html","./src/app/home/account/view-account/view-account.component.ts","./src/app/home/account/view-account/view-account.component.html","./src/app/home/home.guard.ts","./src/app/home/home.module.ts","./src/app/home/home.routes.ts","./src/app/home/home/home.component.ts","./src/app/home/home/home.component.html","./src/app/home/lander/lander.component.ts","./src/app/home/lander/lander.component.html","./src/app/home/profile/profile.component.ts","./src/app/home/profile/profile.component.html","./src/app/home/transfer/transfer.component.ts","./src/app/home/transfer/transfer.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEACI;QAAA,2EAA+B;QACnC,4DAAM;;6FDKO,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEb;;;;;;ICWrB,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,iFACJ;;;IAQA,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,iFACJ;;ADfT,MAAM,mBAAmB;IAU9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,gBAAW,GAAG,EAAE,CAAC;QACjB,WAAM,GAAG,CAAC,CAAC;QACX,gBAAW,GAAG,EAAE,CAAC;QACjB,WAAM,GAAG;YACP,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;SAChB,CAAC;IAEsC,CAAC;IAEzC,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,MAAM,IAAI,GAAG;YACX,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;YAC7D,YAAY,EAAE;gBACZ,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC;gBACxB,QAAQ,EAAE,KAAK;aAChB;YACD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;SACrC,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAChD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC/B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CACF,CAAC,CAAC,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACjD;IACH,CAAC;IAED,sBAAsB,CAAC,MAAM;QAC3B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,GAAG;YACZ,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;SAChB;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG;YACZ,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;SAChB,CAAC;IACJ,CAAC;;sFAhEU,mBAAmB;mGAAnB,mBAAmB;QCVhC,yEACI;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,2EAAgC;QAAA,uEAAY;QAAA,4DAAQ;QACpD,4EAEI;QAF2C,6LAAyB;QAEpE,4EAAiB;QAAA,+EAAmB;QAAA,4DAAS;QAC7C,6EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,6EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,6EAA6B;QAAA,wEAAY;QAAA,4DAAS;QACtD,4DAAS;QACT,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4DAAQ;QAC7C,6EAEA;QAFmB,6LAAyB;QAA5C,4DAEA;QAAA,iHACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,6EAEJ;QAFyB,wLAAoB;QAAzC,4DAEJ;QAAA,4DAAM;QACV,4DAAM;QAEN,8EAAiE;QAAnB,4IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACpF,4DAAO;QACX,4DAAM;;QA/Bc,0DAAiD;QAAjD,yGAAiD;QADN,oFAAyB;QAO1C,0DAAwC;QAAxC,8FAAwC;QASnC,0DAAiD;QAAjD,yGAAiD;QADjE,oFAAyB;QAEd,0DAAwC;QAAxC,8FAAwC;QAQjD,0DAAoB;QAApB,+EAAoB;;6FDrB5C,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICC9C,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,wEAAuB;IAAA,uDAAiD;IAAA,4DAAK;IAC7E,uEAAqB;IAAA,uDAAoF;;IAAA,4DAAI;IAC7G,4EAAgE;IAAhC,8WAA+B;IAAC,+DAAI;IAAA,4DAAS;IAAA,yEAC7E;IAAA,8EAAsE;IAApC,mXAAmC;IAAC,kEAAM;IAAA,4DAAS;IACzF,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAN6B,0DAAiD;IAAjD,+HAAiD;IACnD,0DAAoF;IAApF,yNAAoF;;;IALzH,yEACI;IAAA,uHACI;IASR,4DAAM;;;IAV2B,0DAAgC;IAAhC,oFAAgC;;;IAa7D,wEAAsB;IAAA,iGAAsC;IAAA,wEAA6B;IAAA,iEAAM;IAAA,4DAAI;IAAC,gEAAI;IAAA,4DAAI;;ADLzG,MAAM,oBAAoB;IAG/B,YAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAD5D,aAAQ,GAAQ,EAAE,CAAC;IAC6C,CAAC;IAEjE,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,SAAS;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,+BAA+B,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1E,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IAED,EAAE,CAAC,SAAS;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,SAAS,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;;wFAxBU,oBAAoB;oGAApB,oBAAoB;QCTjC,gHACI;QAYJ,4MACI;;;QAdsB,qFAAuC;;6FDSpD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICAlD,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,wEAAuB;IAAA,uDAAiD;IAAA,4DAAK;IAC7E,uEAAqB;IAAA,uDACD;;IAAA,4DAAI;IAC5B,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAL6B,0DAAiD;IAAjD,uIAAiD;IACnD,0DACD;IADC,qPACD;;;IAQxB,yEACI;IAAA,wEAAuB;IAAA,uDAAa;IAAA,4DAAK;IACzC,uEAAqB;IAAA,uDAAmD;;IAAA,4DAAI;IAChF,4DAAM;;;IAFqB,0DAAa;IAAb,6EAAa;IACf,0DAAmD;IAAnD,kLAAmD;;;IALpF,yEACI;IAAA,yEACI;IAAA,qEAAI;IAAA,yEAAc;IAAA,4DAAK;IACvB,uHACI;IAGR,4DAAM;IACV,4DAAM;;;IALyB,0DAA6B;IAA7B,uFAA6B;;;IAQxD,wEAAsB;IAAA,6EAAkB;IAAA,4DAAI;;;IAI5C,wEAAsB;IAAA,yEAAc;IAAA,4DAAI;;ADhBrC,MAAM,oBAAoB;IAK/B,YAAoB,IAAgB,EAAU,aAA6B;QAAvD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAD3E,gBAAW,GAAQ,EAAE,CAAC;IACyD,CAAC;IAEhF,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;QAC9D,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,+BAA+B,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/E,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACnF,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,CAAC;IACJ,CAAC;;wFA3BU,oBAAoB;oGAApB,oBAAoB;QCTjC,gHACI;QASJ,gHACI;QASJ,4MACI;QAGJ,4MACI;;;;QAzBiB,6EAA+B;QAU3B,0DAA8C;QAA9C,wFAA8C;;6FDD1D,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,SAAS;IAElB,WAAW,CAAC,KAA6B;QACrC,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE;YACjD,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;;kEARQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFN,MAAM;6FAET,SAAS;cAHrB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACF;AACS;AACX;AACoB;AACA;AACG;AACgB;AACG;AACA;AACzB;;;AAYrD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBANZ;YACP,4DAAY,CAAC,QAAQ,CAAC,uDAAU,CAAC;YACjC,0DAAW;YACX,4DAAY;SACb;mIAEU,UAAU,mBAPN,kEAAa,EAAE,2EAAgB,EAAE,2EAAgB,EAAE,8EAAiB,EAAE,8FAAmB,EAAE,kGAAoB,EAAE,kGAAoB,EAAE,yEAAe,2EAGnK,0DAAW;QACX,4DAAY;6FAGH,UAAU;cARtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kEAAa,EAAE,2EAAgB,EAAE,2EAAgB,EAAE,8EAAiB,EAAE,8FAAmB,EAAE,kGAAoB,EAAE,kGAAoB,EAAE,yEAAe,CAAC;gBACtK,OAAO,EAAE;oBACP,4DAAY,CAAC,QAAQ,CAAC,uDAAU,CAAC;oBACjC,0DAAW;oBACX,4DAAY;iBACb;aACF;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACS;AACG;AACH;AACsB;AACA;AACH;AACtB;AACnB;AAElC,MAAM,UAAU,GAAY;IAC/B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;QACxB,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,wEAAe;aAC7B;YACD;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;aAC9B;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8EAAiB;aAC/B;YACD;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;gBAC3B,QAAQ,EAAE;oBACN;wBACI,IAAI,EAAE,MAAM;wBACZ,SAAS,EAAE,iGAAoB;qBAClC;oBACD;wBACI,IAAI,EAAE,iBAAiB;wBACvB,SAAS,EAAE,iGAAoB;qBAClC;oBACD;wBACI,IAAI,EAAE,KAAK;wBACX,SAAS,EAAE,8FAAmB;qBACjC;iBACJ;aACJ;SACJ;KACJ;CACJ,CAAC;;;;;;;;;;;;;ACjDF;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAS3C,MAAM,aAAa;IAExB,YAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEjE,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,KAAK,CAAC,YAAY,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;;0EAZU,aAAa;6FAAb,aAAa;QCT1B,yEACI;QAAA,yEACI;QAAA,uEAAiC;QAAA,mEAAQ;QAAA,4DAAI;QAC7C,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QACT,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAkC;QAAA,qEAAS;QAAA,4DAAI;QACjD,4DAAK;QACL,yEACI;QAAA,wEAA0C;QAAA,mEAAO;QAAA,4DAAI;QACvD,4DAAK;QACP,0EACE;QAAA,yEACE;QAAA,qEACF;QAAA,4DAAI;QACJ,2EACE;QAAA,yEAAoD;QAAA,gEAAI;QAAA,4DAAI;QAC5D,yEAAmD;QAAA,uEAAW;QAAA,4DAAI;QACpE,4DAAM;QACR,4DAAK;QACL,yEACI;QAAA,yEAA2C;QAAA,oEAAQ;QAAA,4DAAI;QACzD,4DAAK;QACT,4DAAK;QACH,8EAAwE;QAAnB,sIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC3F,4DAAM;QACR,4DAAM;QACN,2EACI;QAAA,4EAA+B;QACnC,4DAAM;QACZ,4DAAM;;6FDxBO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QACpC,4DAAM;;6FDIO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDOR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICQlC,6EAAqE;IAAA,uDAAuB;IAAA,4DAAS;;;IAA5D,kGAA2B;IAAC,0DAAuB;IAAvB,uFAAuB;;;IAEhG,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,iFACJ;;;IASI,6EAAqE;IAAA,uDAAuB;IAAA,4DAAS;;;IAA5D,kGAA2B;IAAC,0DAAuB;IAAvB,uFAAuB;;;IAEhG,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,iFACJ;;;IAQA,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,iFACJ;;AD3BL,MAAM,iBAAiB;IAY5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAVpC,oBAAe,GAAG,EAAE,CAAC;QACrB,sBAAiB,GAAG,EAAE,CAAC;QAGvB,WAAM,GAAG;YACP,eAAe,EAAE,EAAE;YACnB,iBAAiB,EAAE,EAAE;YACrB,MAAM,EAAE,EAAE;SACX,CAAC;QACF,aAAQ,GAAQ,EAAE,CAAC;IACqB,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG;YACX,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC9D,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC9B,CAAC,EAAE,YAAY,CAAC,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;YACxB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACjD;aAAM;YACL,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;IAED,sBAAsB,CAAC,MAAM;QAC3B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC;QACZ,IAAI,CAAC,OAAO,CAAC;QACb,IAAI,CAAC,MAAM,GAAG;YACZ,eAAe,EAAE,EAAE;YACnB,iBAAiB,EAAE,EAAE;YACrB,MAAM,EAAE,EAAE;SACX,CAAC;IACJ,CAAC;;kFAhEU,iBAAiB;iGAAjB,iBAAiB;QCR9B,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,2EAA6B;QAAA,+DAAI;QAAA,4DAAQ;QACzC,4EAEI;QAF+C,+LAA6B;QAE5E,4EAAiB;QAAA,8EAAmB;QAAA,4DAAS;QAC7C,qHAAqE;QACzE,4DAAS;QACT,+GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EAA+B;QAAA,8DAAE;QAAA,4DAAQ;QACzC,6EAEI;QAFiD,kMAA+B;QAEhF,6EAAiB;QAAA,+EAAmB;QAAA,4DAAS;QAC7C,qHAAqE;QACzE,4DAAS;QACT,+GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,6EAEA;QAFqB,sLAAoB;QAAzC,4DAEA;QAAA,+GACI;QAER,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,6EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,6EAEJ;QAFuB,uLAAqB;QAAxC,4DAEJ;QAAA,4DAAM;QACV,4DAAM;QAEN,8EAAmE;QAArB,0IAAS,cAAU,IAAC;QAAC,kEAAM;QAAA,4DAAS;QACtF,4DAAO;;QA1CS,0DAAqD;QAArD,6GAAqD;QADN,wFAA6B;QAGpE,0DAAgC;QAAhC,iFAAgC;QAEd,0DAA4C;QAA5C,kGAA4C;QAS7C,0DAAuD;QAAvD,+GAAuD;QAD/B,0FAA+B;QAGxE,0DAAgC;QAAhC,iFAAgC;QAEd,0DAA8C;QAA9C,oGAA8C;QAS9C,0DAA4C;QAA5C,oGAA4C;QADrD,+EAAoB;QAEX,0DAAmC;QAAnC,yFAAmC;QAS9C,0DAAqB;QAArB,gFAAqB;;6FDlCvC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC","file":"home-home-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.sass']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"account\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { error } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-add-account',\n  templateUrl: './add-account.component.html',\n  styleUrls: ['./add-account.component.sass']\n})\nexport class AddAccountComponent implements OnInit {\n\n  accountType = '';\n  amount = 0;\n  accountName = '';\n  errors = {\n    accountType: [],\n    accountName: []\n  };\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    const data = {\n      accountType: this.accountType == '' ? null : this.accountType,\n      currentMoney: {\n        amount: this.amount || 0,\n        currency: 'USD'\n      },\n      accountName: this.accountName.trim()\n    };\n\n    this.http.post('/app/data/account', data).pipe(tap(\n      data => {\n        this.resetError();\n        this.clearFields();\n        alert(\"Account created !!!\");\n      },\n      error => {\n        this.handlerError(error);\n      }\n    )).subscribe();\n  }\n\n  handlerError(error) {\n    if (error.status === 400) {\n      this.genrateValidationErros(error.error.errors);\n    }\n  }\n\n  genrateValidationErros(errors) {\n    errors.forEach(element => {\n      this.errors[element.fieldName].push(element.message);\n    });\n  }\n\n  resetError() {\n    this.errors = {\n      accountType: [],\n      accountName: []\n    }\n  }\n\n  clearFields() {\n    this.accountType = '';\n    this.amount = 0;\n    this.accountName = '';\n    this.errors = {\n      accountType: [],\n      accountName: []\n    };\n  }\n\n}\n","<div class=\"add-account\">\n    <h1>Add Account</h1>\n    <form>\n        <div class=\"form-row\">\n            <div class=\"form-group\">\n                <label for=\"validationCustom04\">Account type</label>\n                <select class=\"custom-select\" id=\"accountType\" [(ngModel)]=\"accountType\" name=\"accountType\"\n                    [class.is-invalid]=\"errors['accountType'].length\">\n                    <option value=''>Choose Account type</option>\n                    <option value=\"SAVING\">SAVING</option>\n                    <option value=\"CURRENT\">CURRENT</option>\n                    <option value=\"MONEY_MARKET\">MONEY MARKET</option>\n                </select>\n                <div class=\"invalid-feedback\" *ngFor=\"let em of errors['accountType']\">\n                    {{em}}\n                </div>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group\">\n                <label for=\"accountName\">Account name</label>\n                <input type=\"text\" [(ngModel)]=\"accountName\" name=\"accountName\" class=\"form-control\" id=\"accountName\"\n                    aria-describedby=\"accountName\" [class.is-invalid]=\"errors['accountName'].length\" />\n                <div class=\"invalid-feedback\" *ngFor=\"let em of errors['accountName']\">\n                    {{em}}\n                </div>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group\">\n                <label for=\"amount\">Amount</label>\n                <input type=\"number\" [(ngModel)]=\"amount\" name=\"amount\" class=\"form-control\" id=\"amount\"\n                    aria-describedby=\"amount\" />\n            </div>\n        </div>\n\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\">Submit</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-account',\n  templateUrl: './list-account.component.html',\n  styleUrls: ['./list-account.component.sass']\n})\nexport class ListAccountComponent implements OnInit {\n\n  accounts: any = [];\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAccount();\n  }\n\n  getAccount() {\n    this.http.get('/app/data/account/list').subscribe(value => {\n      this.accounts = value;\n    });\n  }\n\n  delete(accountId) {\n    this.http.delete(`/app/data/account?accountId=${accountId}`).subscribe(() => {\n      this.getAccount();\n      alert(\"Account deleted!!!\");\n    })\n  }\n\n  go(accountId) {\n    this.router.navigate([`/home/account/view/${accountId}`]);\n  }\n\n}\n","<div class=\"account-list\" *ngIf=\"accounts.length else addAccount\">\n    <div class=\"account-content\" *ngFor=\"let account of accounts\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{account.accountName}} - {{account.accountType}}</h5>\n                <p class=\"card-text\">{{account.currentMoney.currency}} {{account.currentMoney.amount | number : '1.2-2'}}</p>\n                <button class=\"btn btn-primary\" (click)=\"go(account.accountId)\">View</button>&nbsp;&nbsp;\n                <button class=\"btn btn-secondary\" (click)=\"delete(account.accountId)\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #addAccount>\n    <p class=\"no-account\">You have no accounts, please consider <a href=\"#/home/account/add\">adding</a> one.</p>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-view-account',\n  templateUrl: './view-account.component.html',\n  styleUrls: ['./view-account.component.sass']\n})\nexport class ViewAccountComponent implements OnInit {\n\n  accountId;\n  account;\n  transaction: any = [];\n  constructor(private http: HttpClient, private activateRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.accountId = this.activateRoute.snapshot.params.accountId;\n    this.getAccount();\n    this.getTransaction();\n  }\n\n  getAccount() {\n    this.http.get(`/app/data/account?accountId=${this.accountId}`).subscribe(value => {\n      if (value) {\n        this.account = value;\n      }\n    })\n  }\n\n  getTransaction() {\n    this.http.get(`/app/data/transaction?accountId=${this.accountId}`).subscribe(value => {\n      if (value) {\n        this.transaction = value;\n      }\n    })\n  }\n\n}\n","<div class=\"account\" *ngIf=\"account; else noAccount\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">{{account.accountName}} - {{account.accountType}}</h5>\n            <p class=\"card-text\">{{account.currentMoney.currency}} {{account.currentMoney.amount | number : '1.2-2'}} is\n                account balance.</p>\n        </div>\n    </div>\n</div>\n\n<div class=\"transaction\" *ngIf=\"transaction.length; else noTransaction\">\n    <div class=\"card\">\n        <h2>Transactions :</h2>\n        <div class=\"card-body\" *ngFor=\"let t of transaction\">\n            <h5 class=\"card-title\">{{t.remarks}}</h5>\n            <p class=\"card-text\">{{ t.amount | number : '1.2-2'}} worth transaction.</p>\n        </div>\n    </div>\n</div>\n\n<ng-template #noAccount>\n    <p class=\"no-account\">Account not found.</p>\n</ng-template>\n\n<ng-template #noTransaction>\n    <p class=\"no-account\">No transaction</p>\n</ng-template>","import { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HomeGuard implements CanActivate {\n\n    canActivate(route: ActivatedRouteSnapshot) {\n        if (atob(sessionStorage.getItem('login')) === 'YES') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { HomeRoutes } from './home.routes';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AccountComponent } from './account/account.component';\nimport { TransferComponent } from './transfer/transfer.component';\nimport { AddAccountComponent } from './account/add-account/add-account.component';\nimport { ListAccountComponent } from './account/list-account/list-account.component';\nimport { ViewAccountComponent } from './account/view-account/view-account.component';\nimport { LanderComponent } from './lander/lander.component';\n\n\n\n@NgModule({\n  declarations: [HomeComponent, ProfileComponent, AccountComponent, TransferComponent, AddAccountComponent, ListAccountComponent, ViewAccountComponent, LanderComponent],\n  imports: [\n    RouterModule.forChild(HomeRoutes),\n    FormsModule,\n    CommonModule\n  ]\n})\nexport class HomeModule { }\n","import { Route } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { TransferComponent } from './transfer/transfer.component';\nimport { AccountComponent } from './account/account.component';\nimport { ListAccountComponent } from './account/list-account/list-account.component';\nimport { ViewAccountComponent } from './account/view-account/view-account.component';\nimport { AddAccountComponent } from './account/add-account/add-account.component';\nimport { LanderComponent } from './lander/lander.component';\nimport { HomeGuard } from './home.guard';\n\nexport const HomeRoutes: Route[] = [\n    {\n        path: '',\n        component: HomeComponent,\n        canActivate: [HomeGuard],\n        children: [\n            {\n                path: '',\n                component: LanderComponent\n            },\n            {\n                path: 'profile',\n                component: ProfileComponent\n            },\n            {\n                path: 'transfer',\n                component: TransferComponent\n            },\n            {\n                path: 'account',\n                component: AccountComponent,\n                children: [\n                    {\n                        path: 'list',\n                        component: ListAccountComponent\n                    },\n                    {\n                        path: 'view/:accountId',\n                        component: ViewAccountComponent\n                    },\n                    {\n                        path: 'add',\n                        component: AddAccountComponent\n                    }\n                ]\n            }\n        ]\n    }\n];","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.http.get('/logout').subscribe(value => {\n      this.router.navigate(['/login']);\n      alert(\"logged out\");\n    });\n  }\n\n}\n","<div class=\"home\">\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a class=\"navbar-brand\" href=\"#\">MiniBank</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#/home\">Dashboard</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#/home/profile\">Profile</a>\n              </li>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#/home/account/list\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Account\n              </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                <a class=\"dropdown-item\" href=\"#/home/account/list\">List</a>\n                <a class=\"dropdown-item\" href=\"#/home/account/add\">Add account</a>\n              </div>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#/home/transfer\">Transfer</a>\n              </li>\n          </ul>\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" (click)=\"logout()\">Logout</button>\n        </div>\n      </nav>\n      <div class=\"home-content conatiner\">\n          <router-outlet></router-outlet>\n      </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lander',\n  templateUrl: './lander.component.html',\n  styleUrls: ['./lander.component.sass']\n})\nexport class LanderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"lander\">\n    <h1>Welcome</h1>\n    <h2>This is your Dashboard.</h2>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.sass']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.sass']\n})\nexport class TransferComponent implements OnInit {\n\n  senderAccountId = '';\n  receiverAccountId = '';\n  amount;\n  remarks;\n  errors = {\n    senderAccountId: [],\n    receiverAccountId: [],\n    amount: []\n  };\n  accounts: any = [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getAccounts();\n  }\n\n  transfer() {\n    const data = {\n      senderAccountId: this.senderAccountId,\n      receiverAccountId: this.receiverAccountId,\n      amount: this.amount,\n      remarks: this.remarks\n    };\n    this.http.post('/app/data/transaction', data).subscribe(value => {\n      this.clearFields();\n      alert(\"Tranfer success!!!\");\n    }, errorReposne => {\n      this.handlerError(errorReposne);\n    })\n  }\n\n  getAccounts() {\n    this.http.get('/app/data/account/list').subscribe(value => {\n      this.accounts = value;\n    });\n  }\n\n  handlerError(error) {\n    if (error.status === 400) {\n      this.genrateValidationErros(error.error.errors);\n    } else {\n      this.clearFields();\n      alert(error.error);\n    }\n  }\n\n  genrateValidationErros(errors) {\n    errors.forEach(element => {\n      this.errors[element.fieldName].push(element.message);\n    });\n  }\n\n  clearFields() {\n    this.senderAccountId = '';\n    this.receiverAccountId = '';\n    this.amount;\n    this.remarks;\n    this.errors = {\n      senderAccountId: [],\n      receiverAccountId: [],\n      amount: []\n    };\n  }\n\n}\n","<h1>Tranfer fund</h1>\n<form>\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label for=\"senderAccountId\">From</label>\n            <select class=\"custom-select\" id=\"senderAccountId\" [(ngModel)]=\"senderAccountId\" name=\"senderAccountId\"\n                [class.is-invalid]=\"errors['senderAccountId'].length\">\n                <option value=''>Choose Account type</option>\n                <option *ngFor=\"let account of accounts\" value={{account.accountId}}>{{account.accountName}}</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngFor=\"let em of errors['senderAccountId']\">\n                {{em}}\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label for=\"receiverAccountId\">To</label>\n            <select class=\"custom-select\" id=\"receiverAccountId\" [(ngModel)]=\"receiverAccountId\"\n                name=\"receiverAccountId\" [class.is-invalid]=\"errors['receiverAccountId'].length\">\n                <option value=''>Choose Account type</option>\n                <option *ngFor=\"let account of accounts\" value={{account.accountId}}>{{account.accountName}}</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngFor=\"let em of errors['receiverAccountId']\">\n                {{em}}\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label for=\"amount\">Amount</label>\n            <input type=\"number\" [(ngModel)]=\"amount\" name=\"amount\" class=\"form-control\" id=\"amount\"\n                aria-describedby=\"amount\" [class.is-invalid]=\"errors['amount'].length\" />\n            <div class=\"invalid-feedback\" *ngFor=\"let em of errors['amount']\">\n                {{em}}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label for=\"remarks\">Remarks</label>\n            <input type=\"text\" [(ngModel)]=\"remarks\" name=\"remarks\" class=\"form-control\" id=\"remarks\"\n                aria-describedby=\"amount\" />\n        </div>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"transfer()\">Submit</button>\n</form>"],"sourceRoot":"webpack:///"}